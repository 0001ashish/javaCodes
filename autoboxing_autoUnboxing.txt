Autoboxing is the automatic conversion that the Java compiler makes between the primitive types and their corresponding object wrapper classes. For example, converting an 'int' to an 'Integer', a 'double' to a 'Double', and so on. If the conversion goes the other way, this is called unboxing.

 Here is the simplest example of autoboxing:

Character ch = 'a';


PRIMITIVE TYPE 	WRAPPER CLASS

boolean 		Boolean
byte 		Byte
char 		Character
float 		Float
int 		Integer
long 		Long
short 		Short
double 		Double


Sometimes you must use wrapper classes, for example when working with Collection objects, such as ArrayList, where primitive types cannot be used (the list can only store objects):

	ArrayList<int> myNumbers = new ArrayList<int>(); // Invalid

	ArrayList<Integer> myNumbers = new ArrayList<Integer>(); // Valid
